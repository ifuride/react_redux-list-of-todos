{"version":3,"sources":["types/Status.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","helpers/getVisibleTodos.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","components/Error/Error.tsx","App.tsx","index.tsx"],"names":["Status","actions","todo","type","payload","currentTodoReducer","state","action","query","status","initiialFilter","ALL","filterReducer","filter","todos","todosReducer","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","selectedTodo","visibleTodos","filterBy","queryLowerCase","toLowerCase","trim","title","includes","completed","ACTIVE","COMPLETED","getVisibleTodos","length","className","map","id","onClick","currentTodoActions","selectTodo","classNames","TodoFilter","onSubmit","event","preventDefault","value","onChange","e","newStatus","target","filterActions","placeholder","newQuery","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","useEffect","userId","href","email","name","Error","errorMessage","App","isLoading","setIsLoading","setErrorMessage","loadTodos","a","todosFromServer","todosActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.055b4101.chunk.js","sourcesContent":["export enum Status {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetQueryAction = { type: 'query/SET', payload: string };\ntype RemoveQueryAction = { type: 'query/REMOVE' };\ntype SetStatusAction = { type: 'status/SET', payload: Status };\n\ntype Action = SetQueryAction | RemoveQueryAction | SetStatusAction;\n\nconst setQuery = (query: string): SetQueryAction => (\n  { type: 'query/SET', payload: query }\n);\nconst removeQuery = (): RemoveQueryAction => ({ type: 'query/REMOVE' });\n\nconst setStatus = (status: Status): SetStatusAction => (\n  { type: 'status/SET', payload: status }\n);\n\nexport const actions = { setQuery, removeQuery, setStatus };\n\ntype Filter = {\n  query: string,\n  status: Status,\n};\n\nconst initiialFilter: Filter = {\n  query: '',\n  status: Status.ALL,\n};\n\nconst filterReducer = (\n  filter: Filter = initiialFilter,\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'query/SET':\n      return { ...filter, query: action.payload };\n\n    case 'query/REMOVE':\n      return { ...filter, query: '' };\n\n    case 'status/SET':\n      return { ...filter, status: action.payload };\n\n    default:\n      return filter;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = { type: 'todos/SET', payload: Todo[] };\n\nconst setTodos = (todos: Todo[]): SetTodosAction => (\n  { type: 'todos/SET', payload: todos }\n);\n\nexport const actions = { setTodos };\n\ntype State = Todo[] | [];\ntype Action = SetTodosAction;\n\nconst todosReducer = (\n  state: State = [],\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getVisibleTodos } from '../../helpers/getVisibleTodos';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { Todo } from '../../types/Todo';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const todos = useAppSelector(state => state.todos);\n  const { query, status } = useAppSelector(state => state.filter);\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n\n  const selectTodo = (todo: Todo) => dispatch(currentTodoActions.setTodo(todo));\n\n  const visibleTodos = getVisibleTodos(todos, query, status);\n\n  return (\n    <>\n      {!visibleTodos.length ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {visibleTodos.map(todo => (\n              <tr data-cy=\"todo\" key={todo.id}>\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n\n                <td className=\"is-vcentered is-expanded\">\n                  {todo.completed\n                    ? (<p className=\"has-text-success\">{todo.title}</p>)\n                    : (<p className=\"has-text-danger\">{todo.title}</p>)}\n                </td>\n\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => selectTodo(todo)}\n                  >\n                    <span className=\"icon\">\n                      <i className={classNames('far',\n                        { 'fa-eye-slash': selectedTodo === todo },\n                        { 'fa-eye': selectedTodo !== todo })}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import { Status } from '../types/Status';\nimport { Todo } from '../types/Todo';\n\nexport const getVisibleTodos = (\n  todos: Todo[],\n  query: string,\n  filterBy: string,\n) => {\n  let visibleTodos = [...todos];\n\n  if (query) {\n    const queryLowerCase = query.toLowerCase().trim();\n\n    visibleTodos = visibleTodos.filter(({ title }) => (\n      title.toLowerCase().includes(queryLowerCase)));\n  }\n\n  if (filterBy !== Status.ALL) {\n    visibleTodos = visibleTodos.filter(({ completed }) => {\n      switch (filterBy) {\n        case Status.ACTIVE:\n          return !completed;\n        case Status.COMPLETED:\n          return completed;\n        default:\n          return true;\n      }\n    });\n  }\n\n  return visibleTodos;\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { query, status } = useAppSelector(state => state.filter);\n\n  const setQuery = (\n    newQuery: string,\n  ) => dispatch(filterActions.setQuery(newQuery));\n\n  const removeQuery = () => dispatch(filterActions.removeQuery());\n\n  const setStatus = (\n    newStatus: Status,\n  ) => dispatch(filterActions.setStatus(newStatus));\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(e) => setStatus(e.target.value as Status)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={removeQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n\n  const [user, setUser] = useState<User | null>();\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(setUser);\n    }\n  }, []);\n\n  const removeTodo = () => dispatch(currentTodoActions.removeTodo());\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user || !selectedTodo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {selectedTodo && `Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={removeTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{selectedTodo.title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n              <a href={`mailto:${user.email}`}>\n                <span>{user.name}</span>\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  errorMessage: string,\n};\n\nexport const Error: React.FC<Props> = ({ errorMessage }) => (\n  <div className=\"notification is-danger\">\n    {errorMessage}\n  </div>\n);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { actions as todosActions } from './features/todos';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Error } from './components/Error';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const todos = useAppSelector(state => state.todos);\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const loadTodos = async () => {\n    try {\n      setIsLoading(true);\n      const todosFromServer = await getTodos();\n\n      dispatch(todosActions.setTodos(todosFromServer));\n    } catch (error) {\n      setErrorMessage('Unable to load todos');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (\n                <Loader />\n              )}\n              {todos.length > 0 && (\n                <TodoList />\n              )}\n              {errorMessage && (\n                <Error errorMessage={errorMessage} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (<TodoModal />)}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}